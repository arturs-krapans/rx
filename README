

        ██╗████╗██╗██╗
        ╚███╔██║╚███╔╝
         ██╔╝══╝██╔██╗
         ██║   ██╔╝ ██╗
         ╚═╝   ╚═╝  ╚═╝

    `rx` is a modern pixel editor implemented in rust.

  Designed with great care and love
    with pixel artists and animators in mind.

GOALS

  * Minimal UI. Clean aesthetics.
  * Everything that should be controlled by the keyboard, is.
  * Extensible and scriptable with a simple command-based language.
  * Familiar to anyone with vi(m) knowledge.
  * Snappy. No perceptible input lag when painting. All commands run in < 16ms.
  * Optimized for advanced users. No hand-holding. vi-like philosophy.
  * Small, hackable codebase. At most 10 KLOC with only a handful of direct dependencies.
  * First-class Linux support.
  * Run in the browser via WASM & WebGPU.

OVERVIEW

  See the screenshots/ folder to see what the editor looks like.

FEATURES

  * Designed for sprite animation, with live preview.
  * Work with multiple files simultaneously.
  * Extensible command system.
  * Text-based configuration.
  * Built in rust, using modern graphics.
  * PNG support.

PLATFORM SUPPORT

  * Linux     (vulkan)         [GOOD]
  * macOS     (metal)          [OKAY]
  * Windows   (dx11/dx12)      [UNTESTED]

BUILD DEPENDENCIES

  * rust & cargo (https://www.rust-lang.org/tools/install)

INSTALLATION

  Before proceeding, make sure the build dependencies have been installed.

  Then, run:

    $ cargo install --git https://github.com/cloudhead/rx --locked --features <platform>

  where <platform> is one of 'vulkan', 'metal', 'dx11' or 'dx12'.

  This will download `rx` and install it under `~/.cargo/bin/rx`.
  If you prefer a different install location, you can specify it
  via the `--root <prefix>` flag, where <prefix> is for example
  '/usr/local'.

CONFIGURATION

  Create a config folder for rx in your XDG configuration directory:

    $ mkdir -p ~/.config/rx

  and copy the default configuration from the `config/` directory of this
  project to it. You can then edit `init.rx` to configure rx.

USAGE

  After installing, simply run `rx` from a shell or application launcher.

  See `.config/init.rx` for the default key mappings.

  Common commands:

    :e <path..>              Edit path(s)
    :w                       Write/save view
    :q                       Quit view
    :slice <n>               Slice view into <n> frames
    :source <path>           Source an rx script (eg. a palette)
    :f/resize <w> <h>        Resize frames

SUPPORT

  If you find this project useful, consider supporting it by sending ₿ (Bitcoin) to
  the following address:

    1HMfp9QFXmVUarNPmHxa1rhecZXyAPiPZd

LICENSE

  This software is licensed under the GPL. See the LICENSE file for more details.

COPYRIGHT

  (c) 2019 Alexis Sellier <self@cloudhead.io>
