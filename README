

        ██╗████╗██╗██╗
        ╚███╔██║╚███╔╝
         ██╔╝══╝██╔██╗
         ██║   ██╔╝ ██╗
         ╚═╝   ╚═╝  ╚═╝

    `rx` is a modern minimalist pixel editor.

  Designed with great care and love
    with pixel artists and animators in mind.

GOALS

  * Minimal UI. Clean aesthetics.
  * Everything that should be controlled by the keyboard, is.
  * Extensible and scriptable with a simple command-based language.
  * Familiar to anyone with vi(m) knowledge.
  * Snappy. No perceptible input lag when painting. All commands run in < 16ms.
  * Optimized for advanced users. No hand-holding. vi-like philosophy.
  * Small, hackable codebase. At most 10 KLOC with only a handful of direct dependencies.
  * First-class Linux support.
  * Run in the browser via WASM & WebGPU.

OVERVIEW

  See the screenshots/ folder to see what the editor looks like.

FEATURES

  * Designed for sprite animation, with live preview.
  * Work with multiple files simultaneously.
  * Extensible command system.
  * Text-based configuration.
  * Built in rust, using Vulkan.
  * PNG support.

SYSTEM REQUIREMENTS

  * A graphics adapter with Vulkan support.

BUILD DEPENDENCIES

  * rust & cargo (https://www.rust-lang.org/tools/install)

INSTALLATION

  Before proceeding, make sure the build dependencies have been installed.

  1. Install rx by running:

      $ cargo install --force --git https://github.com/cloudhead/rx --root <prefix>

     where <prefix> is for example "/usr/local" or "$HOME".  This will download `rx`
     and install it under `<prefix>/bin/rx`.

  2. Copy `.rxrc` from this repository to your home directory to have a default
     configuration.

  3. Create a `palettes` folder in your home directory:

      $ mkdir -p ~/.rx/palettes

     and copy the palettes from this repository's palettes/ folder to it.

  You're all set!

USAGE

  After installing, simply run `rx` from a shell or application launcher.

  See `.rxrc` in the project root for a list of key mappings.

  Common commands:

    :e <path..>              Edit path(s)
    :w                       Write/save view
    :q                       Quit view
    :slice <n>               Slice view into <n> frames
    :source <path>           Source an rx script (eg. a palette)
    :f/new                   Add frame to the view
    :f/resize <w> <h>        Resize frames

SUPPORT

  If you find this project useful, consider supporting it by sending ₿ (Bitcoin) to
  the following address:

    1HMfp9QFXmVUarNPmHxa1rhecZXyAPiPZd

LICENSE

  This software is licensed under the GPL. See the LICENSE file for more details.

COPYRIGHT

  (c) 2019 Alexis Sellier <self@cloudhead.io>
